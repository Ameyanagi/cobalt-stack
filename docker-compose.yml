# Development environment
services:
  postgres:
    image: postgres:15-alpine
    container_name: cobalt-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: cobalt_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - cobalt-network

  redis:
    image: redis:7-alpine
    container_name: cobalt-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - cobalt-network

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: cobalt-backend-dev
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/cobalt_dev
      REDIS_URL: redis://redis:6379
      PORT: 3000
      RUST_LOG: debug
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cobalt-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    container_name: cobalt-frontend-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NEXT_PUBLIC_API_URL: http://backend:3000
      PORT: 3001
      NODE_ENV: production
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - cobalt-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  cobalt-network:
    driver: bridge
